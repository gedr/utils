package ru.gedr.tuples;

import ru.gedr.comparators.GenericComparator;

public abstract class Unit<T> extends Tuple {
	// =================================================================================================================
	// Constants
	// =================================================================================================================
	private static final long serialVersionUID = 1L;

	// =================================================================================================================
	// Fields
	// =================================================================================================================

	// =================================================================================================================
	// Constructors
	// =================================================================================================================

	// =================================================================================================================
	// Methods for/from SuperClass/Interface
	// =================================================================================================================
	@Override
	public int getDimension() {
		return 1;
	}

	@SuppressWarnings("unchecked")
	@Override
	public <TT> TT getBy(int index) {
		switch (index) {
			case 1 :
				return (TT) getFirst();

			default :
				throw new IndexOutOfBoundsException("Tuple Unit haven't index=" + index);
		}
	}

	@Override
    public String toString(String format) {
        return String.format(format, getFirst());
    }

	public int compareTo(Object o) {
		try {
			@SuppressWarnings("unchecked")
			T thatValue = (T) ((Unit<?>) o).getFirst();
			return GenericComparator.compare(this.getFirst(), thatValue);
		} catch (Exception e) {
			throw new UnsupportedOperationException(e);
		}
	}

	// =================================================================================================================
	// Getter & Setter
	// =================================================================================================================

	// =================================================================================================================
	// Methods
	// =================================================================================================================
	public abstract T getValue();
	public abstract T getFirst();

	// =================================================================================================================
	// Inner and Anonymous Classes
	// =================================================================================================================
}
