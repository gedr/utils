package ru.gedr.comparators;

import java.util.Objects;

public class GenericComparator {
	// =================================================================================================================
	// Constants
	// =================================================================================================================

	// =================================================================================================================
	// Fields
	// =================================================================================================================

	// =================================================================================================================
	// Constructors
	// =================================================================================================================

	// =================================================================================================================
	// Methods for/from SuperClass/Interface
	// =================================================================================================================

	// =================================================================================================================
	// Getter & Setter
	// =================================================================================================================

	// =================================================================================================================
	// Methods
	// =================================================================================================================
//	public static <T extends Comparable<? super T>> int compare(T lh, T rh) {
	public static <T> int compare(T lh, T rh) {
		if (Objects.equals(lh, rh)) {
			return 0;
		}
		if (lh != null) {
			if (rh == null) {
				return -1;
			} else {
				if (lh instanceof Comparable<?>) {
					throw new UnsupportedOperationException(lh.getClass() + " unsuport Comparable interface");
				}
				@SuppressWarnings("unchecked")
				Comparable<? super T> cmpr = (Comparable<? super T>) lh;
				return cmpr.compareTo(rh);
			}
		}
		return +1;
	}

	// =================================================================================================================
	// Inner and Anonymous Classes
	// =================================================================================================================
}
